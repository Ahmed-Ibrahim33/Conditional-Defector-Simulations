<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0" snapToGrid="false">
  <code><![CDATA[turtles-own [
  harvestPref
  harvest-amount
  punisher?
  escaper?
  aware-of-who
  energy
  harvest
  punished?
  escape-attempts
  escaped-this-round?
  detected-this-round?
]

patches-own [ resource ]

globals [
  commons
  commonsResources
  total-escape-attempts
  total-successful-escapes
  round-escape-energy-wasted
  interference-level
]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SETUP
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to setup
  clear-all
  set total-escape-attempts 0
  set total-successful-escapes 0
  set round-escape-energy-wasted 0
  set interference-level 0

  ask n-of Number-Agents patches [
    sprout 1 [
      set shape "circle"
      set size 0.8
      set punished? false
      set aware-of-who turtle-set nobody
      set escape-attempts 0
      set escaped-this-round? false
      set detected-this-round? false
      set harvest 0

      ifelse random-float 100 < Percent-Sustainables [
        set harvestPref "low"
        set harvest-amount Harvest-sustainable
      ] [
        set harvestPref "high"
        set harvest-amount Harvest-greedy
      ]

      ifelse random-float 100 < Percent-Punishers and harvestPref = "low"
        [ set punisher? true ]
        [ set punisher? false ]

      ifelse harvestPref = "high" [
        set escaper? true
      ] [
        set escaper? false
      ]

      set energy Living-costs + 1
      update-color
    ]
  ]

  ask patches [
    set resource Carrying-capacity
    set pcolor scale-color brown resource 0 (Carrying-capacity + 30)
  ]

  reset-ticks
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; GO
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to go
  if count turtles = 0 [ stop ]

  set round-escape-energy-wasted 0
  ask turtles [
    set escaped-this-round? false
    set detected-this-round? false
    set harvest 0
  ]

  ask turtles [ harvesting ]

  ask turtles with [punisher?] [
    set aware-of-who turtle-set nobody
  ]

  escape-behavior
  update-interference
  sense-cheaters

  ask turtles with [ escaped-this-round? and not detected-this-round? ] [
    set total-successful-escapes total-successful-escapes + 1
  ]

  punish

  ask turtles [
    set energy energy + harvest
    expend-energy
    reproduce
    death
  ]

  ask patches [
    regrow
    recolor
  ]

  tick
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ESCAPE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to escape-behavior
  ask turtles with [ harvestPref = "high" and escaper? ] [
    if energy > Costs-escape [
      let potential-punishers turtles in-radius 2 with [ punisher? ]
      if any? potential-punishers [
        set energy energy - Costs-escape
        set round-escape-energy-wasted round-escape-energy-wasted + Costs-escape
        set escape-attempts escape-attempts + 1
        set escaped-this-round? true
        set total-escape-attempts total-escape-attempts + 1
      ]
    ]
  ]
end

to update-interference
  ifelse round-escape-energy-wasted > 0 [
    ifelse interference-scale > 0 [
      set interference-level round-escape-energy-wasted * interference-scale
      if interference-level < 0 [ set interference-level 0 ]
      if interference-level > 1 [ set interference-level 1 ]
    ] [
      set interference-level 0
    ]
  ] [
    set interference-level 0
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; HARVESTING
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to harvesting
  ifelse Punishment = "suspend harvest once" and punished?
    [ set harvest 0 ]
    [ harvest-commons ]

  set punished? false
end

to harvest-commons
  set commons (patch-set neighbors patch-here)
  set commonsResources sum [resource] of commons
  let commonsList sort-on [(- resource)] commons

  ifelse commonsResources < harvest-amount [
    set harvest commonsResources
    ask commons [ set resource 0 ]
    move-away
  ] [
    let remaining-need harvest-amount
    foreach commonsList [ the-patch ->
      if remaining-need > 0 [
        let available [resource] of the-patch
        ifelse available <= remaining-need [
          set harvest harvest + available
          set remaining-need remaining-need - available
          ask the-patch [ set resource 0 ]
        ] [
          set harvest harvest + remaining-need
          ask the-patch [ set resource resource - remaining-need ]
          set remaining-need 0
        ]
      ]
    ]
  ]
end

to move-away
  let next-patch max-one-of (neighbors with [ not any? turtles-here ]) [resource]
  if next-patch != nobody [
    move-to next-patch
    set energy energy - 1
  ]
end

to sense-cheaters
  ask turtles with [punisher?] [
    set harvest harvest - Costs-perception

    let cheaters turtles in-radius 2 with [harvestPref = "high"]
    let base-accuracy Perception-accuracy
    let effective-accuracy base-accuracy * (1 - interference-level)
    if effective-accuracy < 0 [ set effective-accuracy 0 ]
    if effective-accuracy > 100 [ set effective-accuracy 100 ]
    let detected []
    foreach sort cheaters [ c ->
      if random-float 100 < effective-accuracy [
        set detected lput c detected
        ask c [ set detected-this-round? true ]
      ]
    ]

    set aware-of-who detected
  ]
end

to punish
  ask turtles with [ harvestPref = "high" and punished? = false] [
    let punishers (turtles-on neighbors) with [ member? myself [aware-of-who] of self]
    if any? punishers [
      set punished? true
      if Punishment = "kill" [ die ]
      if Punishment = "pay fine" [
        set harvest harvest - Fine
        set punished? false
        ask turtles-on neighbors [
          set harvest harvest + (Fine / (count turtles-on neighbors))
        ]
      ]
      ask punishers [
        set harvest harvest - (Costs-punishment / count punishers)
      ]
    ]
  ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; LIFE CYCLE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to expend-energy
  set energy energy - Living-costs
end

to reproduce
  let birthrate 0.001 * energy
  if random-float 1 < birthrate [
    let destination one-of neighbors with [ not any? turtles-here ]
    if destination != nobody [
      hatch 1 [
        move-to destination
        set punished? false
        set aware-of-who turtle-set nobody
        set escape-attempts 0
        set escaped-this-round? false
        set detected-this-round? false
        set harvest 0
        mutate
        set energy ([energy] of myself / 2)
      ]
      set energy (energy / 2)
    ]
  ]
end

to mutate
  if random-float 100 < Mutation-rate [
    ifelse harvestPref = "high" [
      set harvestPref "low"
      set escaper? false
      set harvest-amount Harvest-sustainable
    ] [
      set harvestPref "high"
      set harvest-amount Harvest-greedy
    ]
  ]

  if random-float 100 < Mutation-rate and harvestPref = "low" [
    set punisher? not punisher?
  ]

  ifelse harvestPref = "high" [
    set punisher? false
    set escaper? true
  ] [
    set escaper? false
  ]

  update-color
end

to update-color
  ifelse harvestPref = "low" [
    ifelse punisher?
      [ set color green ]
      [ set color turquoise ]
  ] [

    set color red
  ]
end

to death
  if energy <= 0 [ die ]
  if random-float 100 < Death-rate [ die ]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; RESOURCES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to regrow
  ifelse resource > 0 [
    let growth-amount (Growth-rate * resource) * (1 - (resource / Carrying-capacity))
    set resource resource + growth-amount
    if resource > Carrying-capacity [ set resource Carrying-capacity ]
  ] [
    set resource 0.1
  ]
end

to recolor
  set pcolor scale-color brown resource 0 (Carrying-capacity + 30)
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; REPORTERS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to-report escape-success-rate
  if total-escape-attempts <= 0 [ report 0 ]
  report (100 * total-successful-escapes) / total-escape-attempts
end

to-report current-interference-level
  report interference-level * 100
end

to-report current-effective-accuracy
  report Perception-accuracy * (1 - interference-level)
end

to-report round-escape-payments
  report round-escape-energy-wasted
end

to-report detection-rate
  let detectable-cheaters turtles with [harvestPref = "high" and not escaped-this-round?]
  if not any? detectable-cheaters [ report 0 ]
  let detected count turtles with [harvestPref = "high" and detected-this-round?]
  report (100 * detected) / count detectable-cheaters
end]]></code>
  <widgets>
    <view x="352" wrappingAllowedX="true" y="10" frameRate="30.0" minPycor="0" height="431" showTickCounter="true" patchSize="7.0" fontSize="10" wrappingAllowedY="true" width="431" tickCounterLabel="ticks" maxPycor="60" updateMode="1" maxPxcor="60" minPxcor="0"></view>
    <button x="198" y="11" height="40" disableUntilTicks="true" forever="true" kind="Observer" width="86" display="Start">go</button>
    <plot x="827" autoPlotX="true" yMax="10.0" autoPlotY="true" y="232" xMin="0.0" height="246" legend="true" xMax="10.0" yMin="0.0" width="483" display="Trait frequencies (%)">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Sustainable, punisher" color="-10899396" legend="true">
        <setup></setup>
        <update>plotxy ticks (count turtles with [color = green] / count turtles) * 100</update>
      </pen>
      <pen interval="1.0" mode="0" display="Sustainable, not punisher" color="-14835848" legend="true">
        <setup></setup>
        <update>plotxy ticks (count turtles with [color = turquoise] / count turtles) * 100</update>
      </pen>
      <pen interval="1.0" mode="0" display="Greedy,escaper " color="-2674135" legend="true">
        <setup></setup>
        <update>plotxy ticks ( count turtles with [color = red] / count turtles) * 100</update>
      </pen>
    </plot>
    <button x="104" y="11" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="90" display="Once">go</button>
    <slider x="7" step="1" y="115" max="100" width="223" display="Percent-Sustainables" height="50" min="0" direction="Horizontal" default="99.0" variable="Percent-Sustainables" units="%"></slider>
    <slider x="10" step="0.5" y="840" max="10" width="178" display="Mutation-rate" height="50" min="0" direction="Horizontal" default="1.0" variable="Mutation-rate" units="%"></slider>
    <slider x="7" step="1" y="60" max="count patches" width="224" display="Number-Agents" height="50" min="0" direction="Horizontal" default="250.0" variable="Number-Agents"></slider>
    <button x="7" y="11" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="94" display="Setup">setup</button>
    <slider x="9" step="0.5" y="785" max="Harvest-sustainable - 1" width="178" display="Living-costs" height="50" min="0" direction="Horizontal" default="4.0" variable="Living-costs"></slider>
    <plot x="825" autoPlotX="true" yMax="10.0" autoPlotY="true" y="483" xMin="0.0" height="275" legend="true" xMax="10.0" yMin="0.0" width="485" display="Average energy">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Sustainable, punisher" color="-10899396" legend="true">
        <setup></setup>
        <update>carefully [plot sum [energy] of turtles with [color = green ] / count turtles with [color = green ]][plot 0]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Sustainable, not punisher" color="-14835848" legend="true">
        <setup></setup>
        <update>carefully [plot sum [energy] of turtles with [color = turquoise ] / count turtles with [color = turquoise ]][plot 0]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Greedy, escaperr" color="-2674135" legend="true">
        <setup></setup>
        <update>carefully [plot sum [energy] of turtles with [color = red ] / count turtles with [color = red ]][plot 0]</update>
      </pen>
    </plot>
    <slider x="10" step="0.5" y="895" max="10" width="179" display="Death-rate" height="50" min="0" direction="Horizontal" default="1.0" variable="Death-rate" units="%"></slider>
    <plot x="792" autoPlotX="true" yMax="100.0" autoPlotY="true" y="11" xMin="0.0" height="216" legend="true" xMax="10.0" yMin="0.0" width="484" display="Populations (% of carrying capacity)">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Resource" color="-5207188" legend="true">
        <setup></setup>
        <update>plot (sum [resource] of patches / (count patches * Carrying-capacity)) * 100</update>
      </pen>
      <pen interval="1.0" mode="0" display="Agents" color="-11053225" legend="true">
        <setup></setup>
        <update>plot (count turtles / count patches) * 100</update>
      </pen>
    </plot>
    <note x="200" y="592" backgroundDark="0" fontSize="11" width="144" markdown="false" height="20" textColorDark="-1" textColorLight="-16777216" backgroundLight="0">Maximum Sustainable Yield</note>
    <slider x="9" step="1" y="730" max="100" width="150" display="Carrying-capacity" height="50" min="0" direction="Horizontal" default="100.0" variable="Carrying-capacity"></slider>
    <slider x="9" step="0.1" y="675" max="1" width="150" display="Growth-rate" height="50" min="0" direction="Horizontal" default="0.5" variable="Growth-rate"></slider>
    <monitor x="165" precision="2" y="681" height="60" fontSize="11" width="100" display="MSY">Carrying-capacity * Growth-rate / 4</monitor>
    <plot x="388" autoPlotX="true" yMax="5.0" autoPlotY="true" y="465" xMin="0.0" height="232" legend="false" xMax="10.0" yMin="0.0" width="433" display="Average harvest per iteration">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Sustainble, punisher" color="-10899396" legend="true">
        <setup></setup>
        <update>carefully [plot sum [harvest] of turtles with [color = green] / count turtles with [color = green]][plot 0]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Sustainble, not punisher" color="-14835848" legend="true">
        <setup></setup>
        <update>carefully [plot sum [harvest] of turtles with [color = turquoise] / count turtles with [color = turquoise]][plot 0]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Greedy, escaper" color="-2674135" legend="true">
        <setup></setup>
        <update>carefully [plot sum [harvest] of turtles with [color = red] / count turtles with [color = red]][plot 0]</update>
      </pen>
    </plot>
    <slider x="7" step="0.5" y="225" max="100" width="189" display="Harvest-sustainable" height="50" min="0" direction="Horizontal" default="7.0" variable="Harvest-sustainable"></slider>
    <slider x="7" step="0.5" y="280" max="100" width="189" display="Harvest-greedy" height="50" min="0" direction="Horizontal" default="12.0" variable="Harvest-greedy"></slider>
    <slider x="8" step="1" y="500" max="100" width="179" display="Perception-accuracy" height="50" min="0" direction="Horizontal" default="100.0" variable="Perception-accuracy" units="%"></slider>
    <slider x="7" step="1" y="170" max="100" width="224" display="Percent-Punishers" height="50" min="0" direction="Horizontal" default="20.0" variable="Percent-Punishers" units="%"></slider>
    <slider x="8" step="0.1" y="445" max="3" width="154" display="Costs-punishment" height="50" min="0" direction="Horizontal" default="0.8" variable="Costs-punishment"></slider>
    <chooser x="8" y="555" height="60" variable="Punishment" current="0" width="177" display="Punishment">
      <choice type="string" value="kill"></choice>
      <choice type="string" value="suspend harvest once"></choice>
      <choice type="string" value="pay fine"></choice>
    </chooser>
    <slider x="9" step="1" y="620" max="20" width="179" display="Fine" height="50" min="1" direction="Horizontal" default="20.0" variable="Fine"></slider>
    <slider x="7" step="0.1" y="390" max="3" width="154" display="Costs-perception" height="50" min="0" direction="Horizontal" default="0.5" variable="Costs-perception"></slider>
    <slider x="7" step="0.5" y="335" max="40" width="172" display="Costs-escape" height="50" min="0" direction="Horizontal" default="4.0" variable="Costs-escape"></slider>
    <monitor x="202" precision="17" y="260" height="60" fontSize="11" width="141" display="Interference Level (%)">current-interference-level</monitor>
    <monitor x="181" precision="17" y="325" height="60" fontSize="11" width="162" display="Round escape cost">round-escape-payments</monitor>
    <monitor x="181" precision="17" y="392" height="60" fontSize="11" width="162" display="Actual monitoring accuracy">current-effective-accuracy</monitor>
    <slider x="10" step="0.001" y="950" max="0.1" width="258" display="interference-scale" height="50" min="0" direction="Horizontal" default="0.005" variable="interference-scale"></slider>
    <monitor x="209" precision="17" y="457" height="60" fontSize="11" width="134" display="successful escapes %">escape-success-rate</monitor>
    <monitor x="228" precision="17" y="522" height="60" fontSize="11" width="100">detection-rate</monitor>
  </widgets>
  <info>## WHAT IS IT?

This model simulates the evolution of sustainable and unsustainable (greedy) harvesting strategies in a shared commons under conditions of monitoring and punishment.
It is an updated NetLogo implementation of the second model presented in the article:

Ibrahim, A.M. The conditional defector strategies can violate the most crucial supporting mechanisms of cooperation. Sci Rep 12, 15157 (2022). https://doi.org/10.1038/s41598-022-18797-2

The model explores how different agent types (sustainable harvesters, greedy harvesters, punishers, and escapers) interact in the commons, and how punishment, escape attempts, and monitoring accuracy affect sustainability outcomes.

Key finding: The model highlights how escaping cheaters (Conditional defector agents who cooperate to reduce the perception accuracy of the punishers.) can undermine punishment mechanisms and kin selection that would otherwise enhance cooperation, thereby threatening the evolutionary stability of sustainable strategies.


## HOW IT WORKS

* The world is a grid of patches with renewable resources.

* Agents (turtles) harvest resources with either sustainable (low) or greedy (high) strategies.

* Some sustainable agents are punishers:

They monitor their neighborhood within a radius of 2 patches.

punishers pay a perception cost for detecting greedy agents.

Upon detection, punishers can sanction cheaters depending on the punishment rule:

Kill → remove the cheater.

Fine → subtract a fine from the cheater’s harvest, which is redistributed among neighboring agents.

Suspend harvest once → prevent cheater from harvesting in the current round.

Punishers also pay an additional punishment cost when applying sanctions.

* Greedy agents are escapers.

They monitor their neighborhood within a radius of 2 patches.

If punishers are nearby, escapers can attempt to avoid detection by paying an escape cost.

These escape costs are summed up, every round, into a global interference level.

The interference reduces the effective detection accuracy of punishers in proportion to the total escape energy wasted.

* Agents update their energy after harvest and costs, reproduce with mutation, or die if their energy is depleted.

* Resources regrow logistically each round.


## THINGS TO NOTICE

* The effectiveness of punishment in suppressing greed when no escapers are present.

* How the introduction of escapers undermines punishment:

Escapers invest energy in escape attempts when punishers are nearby.

The accumulated escape energy generates interference, reducing detection accuracy.

As interference grows, greedy agents escape more frequently, avoiding sanctions.

* Key insight: even though punishment and kin selection usually promote cooperation, the presence of escaping cheaters, "conditional defectors," can erode both mechanisms, allowing greed to persist or dominate.


## HOW TO USE IT

* Number-Agents: number of agents initialized.

* Percent-Sustainables: proportion of sustainable harvesters.

* Percent-Punishers: proportion of sustainables that are punishers.

* Harvest-sustainable: harvest amount for sustainable agents.

* Harvest-greedy: harvest amount for greedy agents.

* Living-costs: baseline energy cost per round.

* Costs-perception: the costs in units of energy that punishing agents have to pay for perceiving other agents.

* Costs-punishment: the costs in units of energy that punishing agents have to pay to punish other agents. All punishing agents of an agent divide the costs of punishment.

* Costs-escape: the costs in units of energy that escaping cheater agents have to pay for avoiding detection.

* Fine: fine imposed on cheaters when punishment is "pay fine".

* Punishment: mode of punishment ("kill", "pay fine", or "suspend harvest once").

* Growth-rate: intrinsic growth rate of resources.

* Carrying-capacity: maximum resource capacity per patch.

* Mutation-rate: probability of trait mutation during reproduction.

* Death-rate: baseline mortality rate.

* Perception-accuracy: base probability of detecting greedy harvesters.

* interference-scale: strength of interference caused by escape energy waste.

* Buttons:

* setup: initializes agents and resources.

* go: runs the simulation continuously.


## THINGS TO TRY

* Change Costs-escape and Harvest-greedy to see whether escape becomes an effective strategy.

* Increase Fine or switch Punishment type to test different enforcement regimes.

* Explore how Perception-accuracy interacts with interference-scale.


## EXTENDING THE MODEL


* Add spatial mobility beyond local moves (migration dynamics).

* Allow heterogeneous perception and escape ranges for punishers and cheaters, respectively.

* Explore the coevolution of resource regeneration parameters with harvesting behavior.


## NETLOGO FEATURES

* Uses turtles-own and patches-own to manage agent and resource states.

* Implements logistic resource growth with carrying capacity.

* Employs detection accuracy modified by interference, combining agent-level and global variables.

* Mutation is implemented directly in reproduce.

## RELATED MODELS

* Models in the NetLogo library: Commons, Altruism, Evolutionary Strategies.

* Other commons dilemma and cooperation models that explore punishment, monitoring, or resource harvesting.

## CREDITS AND REFERENCES

This model is an update of the second model from: 
* Ibrahim, A.M. The conditional defector strategies can violate the most crucial supporting mechanisms of cooperation. Sci Rep 12, 15157 (2022). https://doi.org/10.1038/s41598-022-18797-2

NetLogo: Wilensky, U. (1999). NetLogo. Center for Connected Learning and Computer-Based Modeling, Northwestern University.


## Licence

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. http://creativecommons.org/licenses/by-nc-sa/4.0/</info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="airplane" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="135" y="15"></point>
        <point x="120" y="60"></point>
        <point x="120" y="105"></point>
        <point x="15" y="165"></point>
        <point x="15" y="195"></point>
        <point x="120" y="180"></point>
        <point x="135" y="240"></point>
        <point x="105" y="270"></point>
        <point x="120" y="285"></point>
        <point x="150" y="270"></point>
        <point x="180" y="285"></point>
        <point x="210" y="270"></point>
        <point x="165" y="240"></point>
        <point x="180" y="180"></point>
        <point x="285" y="195"></point>
        <point x="285" y="165"></point>
        <point x="180" y="105"></point>
        <point x="180" y="60"></point>
        <point x="165" y="15"></point>
      </polygon>
    </shape>
    <shape name="arrow" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="0" y="150"></point>
        <point x="105" y="150"></point>
        <point x="105" y="293"></point>
        <point x="195" y="293"></point>
        <point x="195" y="150"></point>
        <point x="300" y="150"></point>
      </polygon>
    </shape>
    <shape name="box" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="285"></point>
        <point x="285" y="225"></point>
        <point x="285" y="75"></point>
        <point x="150" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="135"></point>
        <point x="15" y="75"></point>
        <point x="150" y="15"></point>
        <point x="285" y="75"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="75"></point>
        <point x="15" y="225"></point>
        <point x="150" y="285"></point>
        <point x="150" y="135"></point>
      </polygon>
      <line endX="150" startY="285" marked="false" color="255" endY="135" startX="150"></line>
      <line endX="15" startY="135" marked="false" color="255" endY="75" startX="150"></line>
      <line endX="285" startY="135" marked="false" color="255" endY="75" startX="150"></line>
    </shape>
    <shape name="bug" rotatable="true" editableColorIndex="0">
      <circle x="96" y="182" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="110" y="127" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <circle x="110" y="75" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <line endX="80" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
      <line endX="220" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
    </shape>
    <shape name="butterfly" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="209" y="199"></point>
        <point x="225" y="225"></point>
        <point x="225" y="255"></point>
        <point x="195" y="270"></point>
        <point x="165" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="89" y="198"></point>
        <point x="75" y="225"></point>
        <point x="75" y="255"></point>
        <point x="105" y="270"></point>
        <point x="135" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="139" y="148"></point>
        <point x="100" y="105"></point>
        <point x="55" y="90"></point>
        <point x="25" y="90"></point>
        <point x="10" y="105"></point>
        <point x="10" y="135"></point>
        <point x="25" y="180"></point>
        <point x="40" y="195"></point>
        <point x="85" y="194"></point>
        <point x="139" y="163"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="162" y="150"></point>
        <point x="200" y="105"></point>
        <point x="245" y="90"></point>
        <point x="275" y="90"></point>
        <point x="290" y="105"></point>
        <point x="290" y="135"></point>
        <point x="275" y="180"></point>
        <point x="260" y="195"></point>
        <point x="215" y="195"></point>
        <point x="162" y="165"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="135" y="225"></point>
        <point x="120" y="150"></point>
        <point x="135" y="120"></point>
        <point x="150" y="105"></point>
        <point x="165" y="120"></point>
        <point x="180" y="150"></point>
        <point x="165" y="225"></point>
      </polygon>
      <circle x="135" y="90" marked="false" color="255" diameter="30" filled="true"></circle>
      <line endX="195" startY="105" marked="false" color="255" endY="60" startX="150"></line>
      <line endX="105" startY="105" marked="false" color="255" endY="60" startX="150"></line>
    </shape>
    <shape name="car" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="300" y="180"></point>
        <point x="279" y="164"></point>
        <point x="261" y="144"></point>
        <point x="240" y="135"></point>
        <point x="226" y="132"></point>
        <point x="213" y="106"></point>
        <point x="203" y="84"></point>
        <point x="185" y="63"></point>
        <point x="159" y="50"></point>
        <point x="135" y="50"></point>
        <point x="75" y="60"></point>
        <point x="0" y="150"></point>
        <point x="0" y="165"></point>
        <point x="0" y="225"></point>
        <point x="300" y="225"></point>
        <point x="300" y="180"></point>
      </polygon>
      <circle x="180" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <circle x="30" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="162" y="80"></point>
        <point x="132" y="78"></point>
        <point x="134" y="135"></point>
        <point x="209" y="135"></point>
        <point x="194" y="105"></point>
        <point x="189" y="96"></point>
        <point x="180" y="89"></point>
      </polygon>
      <circle x="47" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
      <circle x="195" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
    </shape>
    <shape name="circle" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="circle 2" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
    </shape>
    <shape name="cow" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="200" y="193"></point>
        <point x="197" y="249"></point>
        <point x="179" y="249"></point>
        <point x="177" y="196"></point>
        <point x="166" y="187"></point>
        <point x="140" y="189"></point>
        <point x="93" y="191"></point>
        <point x="78" y="179"></point>
        <point x="72" y="211"></point>
        <point x="49" y="209"></point>
        <point x="48" y="181"></point>
        <point x="37" y="149"></point>
        <point x="25" y="120"></point>
        <point x="25" y="89"></point>
        <point x="45" y="72"></point>
        <point x="103" y="84"></point>
        <point x="179" y="75"></point>
        <point x="198" y="76"></point>
        <point x="252" y="64"></point>
        <point x="272" y="81"></point>
        <point x="293" y="103"></point>
        <point x="285" y="121"></point>
        <point x="255" y="121"></point>
        <point x="242" y="118"></point>
        <point x="224" y="167"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="73" y="210"></point>
        <point x="86" y="251"></point>
        <point x="62" y="249"></point>
        <point x="48" y="208"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="25" y="114"></point>
        <point x="16" y="195"></point>
        <point x="9" y="204"></point>
        <point x="23" y="213"></point>
        <point x="25" y="200"></point>
        <point x="39" y="123"></point>
      </polygon>
    </shape>
    <shape name="cylinder" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="dot" rotatable="false" editableColorIndex="0">
      <circle x="90" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
    </shape>
    <shape name="face happy" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="90" y="239"></point>
        <point x="62" y="213"></point>
        <point x="47" y="191"></point>
        <point x="67" y="179"></point>
        <point x="90" y="203"></point>
        <point x="109" y="218"></point>
        <point x="150" y="225"></point>
        <point x="192" y="218"></point>
        <point x="210" y="203"></point>
        <point x="227" y="181"></point>
        <point x="251" y="194"></point>
        <point x="236" y="217"></point>
        <point x="212" y="240"></point>
      </polygon>
    </shape>
    <shape name="face neutral" rotatable="false" editableColorIndex="0">
      <circle x="8" y="7" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <rectangle endX="240" startY="195" marked="false" color="255" endY="225" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="face sad" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="168"></point>
        <point x="90" y="184"></point>
        <point x="62" y="210"></point>
        <point x="47" y="232"></point>
        <point x="67" y="244"></point>
        <point x="90" y="220"></point>
        <point x="109" y="205"></point>
        <point x="150" y="198"></point>
        <point x="192" y="205"></point>
        <point x="210" y="220"></point>
        <point x="227" y="242"></point>
        <point x="251" y="229"></point>
        <point x="236" y="206"></point>
        <point x="212" y="183"></point>
      </polygon>
    </shape>
    <shape name="fish" rotatable="false" editableColorIndex="0">
      <polygon color="-1" filled="true" marked="false">
        <point x="44" y="131"></point>
        <point x="21" y="87"></point>
        <point x="15" y="86"></point>
        <point x="0" y="120"></point>
        <point x="15" y="150"></point>
        <point x="0" y="180"></point>
        <point x="13" y="214"></point>
        <point x="20" y="212"></point>
        <point x="45" y="166"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="135" y="195"></point>
        <point x="119" y="235"></point>
        <point x="95" y="218"></point>
        <point x="76" y="210"></point>
        <point x="46" y="204"></point>
        <point x="60" y="165"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="75" y="45"></point>
        <point x="83" y="77"></point>
        <point x="71" y="103"></point>
        <point x="86" y="114"></point>
        <point x="166" y="78"></point>
        <point x="135" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="136"></point>
        <point x="151" y="77"></point>
        <point x="226" y="81"></point>
        <point x="280" y="119"></point>
        <point x="292" y="146"></point>
        <point x="292" y="160"></point>
        <point x="287" y="170"></point>
        <point x="270" y="195"></point>
        <point x="195" y="210"></point>
        <point x="151" y="212"></point>
        <point x="30" y="166"></point>
      </polygon>
      <circle x="215" y="106" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="flag" rotatable="false" editableColorIndex="0">
      <rectangle endX="75" startY="15" marked="true" color="-1920102913" endY="300" startX="60" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="90" y="150"></point>
        <point x="270" y="90"></point>
        <point x="90" y="30"></point>
      </polygon>
      <line endX="90" startY="135" marked="true" color="-1920102913" endY="135" startX="75"></line>
      <line endX="90" startY="45" marked="true" color="-1920102913" endY="45" startX="75"></line>
    </shape>
    <shape name="flower" rotatable="false" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="135" y="120"></point>
        <point x="165" y="165"></point>
        <point x="180" y="210"></point>
        <point x="180" y="240"></point>
        <point x="150" y="300"></point>
        <point x="165" y="300"></point>
        <point x="195" y="240"></point>
        <point x="195" y="195"></point>
        <point x="165" y="135"></point>
      </polygon>
      <circle x="85" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="147" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="192" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="85" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="70" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="25" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="96" y="51" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="113" y="68" marked="false" color="255" diameter="74" filled="true"></circle>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="189" y="233"></point>
        <point x="219" y="188"></point>
        <point x="249" y="173"></point>
        <point x="279" y="188"></point>
        <point x="234" y="218"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="180" y="255"></point>
        <point x="150" y="210"></point>
        <point x="105" y="210"></point>
        <point x="75" y="240"></point>
        <point x="135" y="240"></point>
      </polygon>
    </shape>
    <shape name="house" rotatable="false" editableColorIndex="0">
      <rectangle endX="255" startY="120" marked="true" color="-1920102913" endY="285" startX="45" filled="true"></rectangle>
      <rectangle endX="180" startY="210" marked="false" color="255" endY="285" startX="120" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="120"></point>
        <point x="150" y="15"></point>
        <point x="285" y="120"></point>
      </polygon>
      <line endX="270" startY="120" marked="false" color="255" endY="120" startX="30"></line>
    </shape>
    <shape name="leaf" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="210"></point>
        <point x="135" y="195"></point>
        <point x="120" y="210"></point>
        <point x="60" y="210"></point>
        <point x="30" y="195"></point>
        <point x="60" y="180"></point>
        <point x="60" y="165"></point>
        <point x="15" y="135"></point>
        <point x="30" y="120"></point>
        <point x="15" y="105"></point>
        <point x="40" y="104"></point>
        <point x="45" y="90"></point>
        <point x="60" y="90"></point>
        <point x="90" y="105"></point>
        <point x="105" y="120"></point>
        <point x="120" y="120"></point>
        <point x="105" y="60"></point>
        <point x="120" y="60"></point>
        <point x="135" y="30"></point>
        <point x="150" y="15"></point>
        <point x="165" y="30"></point>
        <point x="180" y="60"></point>
        <point x="195" y="60"></point>
        <point x="180" y="120"></point>
        <point x="195" y="120"></point>
        <point x="210" y="105"></point>
        <point x="240" y="90"></point>
        <point x="255" y="90"></point>
        <point x="263" y="104"></point>
        <point x="285" y="105"></point>
        <point x="270" y="120"></point>
        <point x="285" y="135"></point>
        <point x="240" y="165"></point>
        <point x="240" y="180"></point>
        <point x="270" y="195"></point>
        <point x="240" y="210"></point>
        <point x="180" y="210"></point>
        <point x="165" y="195"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="195"></point>
        <point x="135" y="240"></point>
        <point x="120" y="255"></point>
        <point x="105" y="255"></point>
        <point x="105" y="285"></point>
        <point x="135" y="285"></point>
        <point x="165" y="240"></point>
        <point x="165" y="195"></point>
      </polygon>
    </shape>
    <shape name="line" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="300" startX="150"></line>
    </shape>
    <shape name="line half" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="150" startX="150"></line>
    </shape>
    <shape name="pentagon" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="15"></point>
        <point x="15" y="120"></point>
        <point x="60" y="285"></point>
        <point x="240" y="285"></point>
        <point x="285" y="120"></point>
      </polygon>
    </shape>
    <shape name="person" rotatable="false" editableColorIndex="0">
      <circle x="110" y="5" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="120" y="195"></point>
        <point x="90" y="285"></point>
        <point x="105" y="300"></point>
        <point x="135" y="300"></point>
        <point x="150" y="225"></point>
        <point x="165" y="300"></point>
        <point x="195" y="300"></point>
        <point x="210" y="285"></point>
        <point x="180" y="195"></point>
        <point x="195" y="90"></point>
      </polygon>
      <rectangle endX="172" startY="79" marked="true" color="-1920102913" endY="94" startX="127" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="195" y="90"></point>
        <point x="240" y="150"></point>
        <point x="225" y="180"></point>
        <point x="165" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="60" y="150"></point>
        <point x="75" y="180"></point>
        <point x="135" y="105"></point>
      </polygon>
    </shape>
    <shape name="plant" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="square" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
    </shape>
    <shape name="square 2" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
      <rectangle endX="240" startY="60" marked="false" color="255" endY="240" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="star" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="151" y="1"></point>
        <point x="185" y="108"></point>
        <point x="298" y="108"></point>
        <point x="207" y="175"></point>
        <point x="242" y="282"></point>
        <point x="151" y="216"></point>
        <point x="59" y="282"></point>
        <point x="94" y="175"></point>
        <point x="3" y="108"></point>
        <point x="116" y="108"></point>
      </polygon>
    </shape>
    <shape name="target" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <circle x="60" y="60" marked="true" color="-1920102913" diameter="180" filled="true"></circle>
      <circle x="90" y="90" marked="false" color="255" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
    </shape>
    <shape name="tree" rotatable="false" editableColorIndex="0">
      <circle x="118" y="3" marked="true" color="-1920102913" diameter="94" filled="true"></circle>
      <rectangle endX="180" startY="195" marked="false" color="-1653716737" endY="300" startX="120" filled="true"></rectangle>
      <circle x="65" y="21" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="116" y="41" marked="true" color="-1920102913" diameter="127" filled="true"></circle>
      <circle x="45" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
      <circle x="104" y="74" marked="true" color="-1920102913" diameter="152" filled="true"></circle>
    </shape>
    <shape name="triangle" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
    </shape>
    <shape name="triangle 2" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="151" y="99"></point>
        <point x="225" y="223"></point>
        <point x="75" y="224"></point>
      </polygon>
    </shape>
    <shape name="truck" rotatable="false" editableColorIndex="0">
      <rectangle endX="195" startY="45" marked="true" color="-1920102913" endY="187" startX="4" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="296" y="193"></point>
        <point x="296" y="150"></point>
        <point x="259" y="134"></point>
        <point x="244" y="104"></point>
        <point x="208" y="104"></point>
        <point x="207" y="194"></point>
      </polygon>
      <rectangle endX="195" startY="60" marked="false" color="-1" endY="105" startX="195" filled="true"></rectangle>
      <polygon color="255" filled="true" marked="false">
        <point x="238" y="112"></point>
        <point x="252" y="141"></point>
        <point x="219" y="141"></point>
        <point x="218" y="112"></point>
      </polygon>
      <circle x="234" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <rectangle endX="214" startY="185" marked="true" color="-1920102913" endY="194" startX="181" filled="true"></rectangle>
      <circle x="144" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="144" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="234" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
    </shape>
    <shape name="turtle" rotatable="true" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="215" y="204"></point>
        <point x="240" y="233"></point>
        <point x="246" y="254"></point>
        <point x="228" y="266"></point>
        <point x="215" y="252"></point>
        <point x="193" y="210"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="195" y="90"></point>
        <point x="225" y="75"></point>
        <point x="245" y="75"></point>
        <point x="260" y="89"></point>
        <point x="269" y="108"></point>
        <point x="261" y="124"></point>
        <point x="240" y="105"></point>
        <point x="225" y="105"></point>
        <point x="210" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="105" y="90"></point>
        <point x="75" y="75"></point>
        <point x="55" y="75"></point>
        <point x="40" y="89"></point>
        <point x="31" y="108"></point>
        <point x="39" y="124"></point>
        <point x="60" y="105"></point>
        <point x="75" y="105"></point>
        <point x="90" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="132" y="85"></point>
        <point x="134" y="64"></point>
        <point x="107" y="51"></point>
        <point x="108" y="17"></point>
        <point x="150" y="2"></point>
        <point x="192" y="18"></point>
        <point x="192" y="52"></point>
        <point x="169" y="65"></point>
        <point x="172" y="87"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="85" y="204"></point>
        <point x="60" y="233"></point>
        <point x="54" y="254"></point>
        <point x="72" y="266"></point>
        <point x="85" y="252"></point>
        <point x="107" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="119" y="75"></point>
        <point x="179" y="75"></point>
        <point x="209" y="101"></point>
        <point x="224" y="135"></point>
        <point x="220" y="225"></point>
        <point x="175" y="261"></point>
        <point x="128" y="261"></point>
        <point x="81" y="224"></point>
        <point x="74" y="135"></point>
        <point x="88" y="99"></point>
      </polygon>
    </shape>
    <shape name="wheel" rotatable="false" editableColorIndex="0">
      <circle x="3" y="3" marked="true" color="-1920102913" diameter="294" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <line endX="150" startY="285" marked="true" color="-1920102913" endY="15" startX="150"></line>
      <line endX="285" startY="150" marked="true" color="-1920102913" endY="150" startX="15"></line>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
      <line endX="79" startY="40" marked="true" color="-1920102913" endY="269" startX="216"></line>
      <line endX="269" startY="84" marked="true" color="-1920102913" endY="221" startX="40"></line>
      <line endX="269" startY="216" marked="true" color="-1920102913" endY="79" startX="40"></line>
      <line endX="221" startY="40" marked="true" color="-1920102913" endY="269" startX="84"></line>
    </shape>
    <shape name="x" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="270" y="75"></point>
        <point x="225" y="30"></point>
        <point x="30" y="225"></point>
        <point x="75" y="270"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="75"></point>
        <point x="75" y="30"></point>
        <point x="270" y="225"></point>
        <point x="225" y="270"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup-full repeat 150 [ go ]</previewCommands>
  <experiments>
    <experiment name="Experiment 104" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 105" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="100"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="100"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 106" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="4000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 107" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="1000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 108" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="25"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="25"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 109" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.02"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 110" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.0025"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 111" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 113" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Exp bio evo behavior change" repetitions="3" sequentialRunOrder="true" runMetricsEveryStep="true" timeLimit="200">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>count turtles with [ harvestPref = "low"]</metric>
        <metric>count turtles</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="Mutation-rate">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="Initial-number-people">
          <value value="1000"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="fine">
          <value value="0"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="monitoring-efficiency">
          <value value="50"></value>
          <value value="100"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="defense-cost">
          <value value="0"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="K">
          <value value="100"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="norm-psyche">
          <value value="0"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="punishment-quorum">
          <value value="1"></value>
          <value value="5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="enforcement-cost">
          <value value="0"></value>
          <value value="3"></value>
          <value value="5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="degree-fear">
          <value value="0"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="greedy-amount">
          <value value="15"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="degree-envy">
          <value value="4"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-percent-punishers">
          <value value="5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="compassion">
          <value value="0"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-percent-sustainables">
          <value value="5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="regrowth-rate">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="punishment">
          <value value="&quot;suspend harvest once&quot;"></value>
          <value value="&quot;kill&quot;"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="living-costs">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="sustainable-amount">
          <value value="12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="Mortality-rate">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="degree-guilt">
          <value value="0"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
  </experiments>
</model>
